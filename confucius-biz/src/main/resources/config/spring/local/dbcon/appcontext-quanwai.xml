<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

    <bean id="dao.dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.name}"/>
        <property name="password" value="${db.password}"/>

        <!--连接池建立时创建的初始化连接数-->
        <property name="initialSize" value="5"/>
        <!--连接池中最小的活跃连接数-->
        <property name="minIdle" value="5"/>
        <!--连接池中最大的活跃连接数-->
        <property name="maxActive" value="15"/>
        <!--配置获取连接等待超时时间-->
        <property name="maxWait" value="60000"/>
        <!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!--校验查询 sql-->
        <property name="validationQuery" value="SELECT 'x'"/>
        <!--是否在连接空闲一段时间后检测其可用性-->
        <property name="testWhileIdle" value="true"/>
        <!--是否在获得连接后检测其可用性-->
        <property name="testOnBorrow" value="true"/>
        <!--是否在连接放回连接池后检测其可用性-->
        <property name="testOnReturn" value="false"/>
        <!--查询超时时间-->
        <property name="queryTimeout" value="60000"/>
        <!--事务查询超时时间-->
        <property name="transactionQueryTimeout" value="60000"/>
        <!--登录超时时间	-->
        <property name="loginTimeout" value="60000"/>
        <!--打开 PSCache，并且制定每个连接上 PSCache 的大小-->
        <property name="poolPreparedStatements" value="false"/>
        <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="30"/>-->
        <!--配置监控统计拦截的 filters，去掉后监控界面 sql 无法统计-->
        <!--<property name="filters" value="stat"/>-->
    </bean>

    <bean id="dao.fragment.dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${db.fragment.url}"/>
        <property name="username" value="${db.name}"/>
        <property name="password" value="${db.password}"/>

        <!--连接池建立时创建的初始化连接数-->
        <property name="initialSize" value="5"/>
        <!--连接池中最小的活跃连接数-->
        <property name="minIdle" value="5"/>
        <!--连接池中最大的活跃连接数-->
        <property name="maxActive" value="15"/>
        <!--配置获取连接等待超时时间-->
        <property name="maxWait" value="60000"/>
        <!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!--校验查询 sql-->
        <property name="validationQuery" value="SELECT 'x'"/>
        <!--是否在连接空闲一段时间后检测其可用性-->
        <property name="testWhileIdle" value="true"/>
        <!--是否在获得连接后检测其可用性-->
        <property name="testOnBorrow" value="true"/>
        <!--是否在连接放回连接池后检测其可用性-->
        <property name="testOnReturn" value="false"/>
        <!--查询超时时间-->
        <property name="queryTimeout" value="60000"/>
        <!--事务查询超时时间-->
        <property name="transactionQueryTimeout" value="60000"/>
        <!--登录超时时间	-->
        <property name="loginTimeout" value="60000"/>
        <!--打开 PSCache，并且制定每个连接上 PSCache 的大小-->
        <property name="poolPreparedStatements" value="false"/>
        <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="30"/>-->
        <!--配置监控统计拦截的 filters，去掉后监控界面 sql 无法统计-->
        <!--<property name="filters" value="stat"/>-->
    </bean>

    <!-- transaction domain, use JtaTransactionManager for global tx -->
    <bean id="dao.transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dao.dataSource" />
    </bean>

</beans>
